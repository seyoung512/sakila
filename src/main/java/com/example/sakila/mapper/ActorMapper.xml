<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.sakila.mapper.ActorMapper">
	
	<!-- /on/filmOne : searchName검색결과 -->
	<select id="selectActorListByActor" parameterType="String"	resultType="com.example.sakila.vo.Actor">
		SELECT 
			actor_id actorId
			, first_name firstName
			, last_name lastName
		FROM actor
		WHERE first_name LIKE CONCAT('%', #{searchName}, '%')
		OR last_name LIKE CONCAT('%', #{searchName}, '%')
	</select>
	
	<!-- 배우 삭제 -->
	<delete id="deleteActor" parameterType="Integer">
		DELETE FROM actor
		WHERE actor_id = #{actorId}
	</delete>
	
	<!-- 배우 정보 수정 -->
	<update id="updateActor" parameterType="com.example.sakila.vo.Actor">
		UPDATE actor
			<set>
				<if test="firstName != null">		
					first_name = #{firstName}
				</if>	
				<if test="lastName != null">		
					last_name = #{lastName}
				</if>	
			</set> 
		WHERE actor_id = #{actorId}
	</update>
	
	<!-- 전체 배우의 수를 반환 (검색어에 해당하는 것만) -->
	<select id="totalCount" parameterType="String" resultType="Integer">
		SELECT COUNT(*)
		FROM actor
		<where>
			<if test="searchWord != null">
				first_name LIKE CONCAT('%', #{searchWord}, '%')
				OR last_name LIKE CONCAT('%', #{searchWord}, '%')
			</if>
		</where>
	</select>
	
	<!-- 특정 영화에 출연한 모든 배우들의 목록을 반환 -->
	<select id="selectActorListByFilm" parameterType="Integer" resultType="com.example.sakila.vo.Actor">
		SELECT
			a.actor_id actorId
			, a.first_name firstName
			, a.last_name lastName
		FROM film_actor fa INNER JOIN actor a
		ON fa.actor_id = a.actor_id
		WHERE fa.film_id = #{filmId}
	</select>
		
	<!-- 특정 배우의 상세 정보를 반환 -->
	<select id="selectActorOne" parameterType="Integer" resultType="com.example.sakila.vo.Actor">
		SELECT
			actor_id actorId
			, first_name firstName
			, last_name lastName
			, last_Update lastUpdate
		FROM actor
		WHERE actor_id = #{actorId}
	</select>
	
	<!-- 배우이름 검색하면 검색한 배우이름으로 리스트 보여주기 -->
	<select id="selectActorList" parameterType="Map" resultType="com.example.sakila.vo.Actor">
		SELECT
			actor_id actorId
			, first_name firstName
			, last_name lastName
		FROM actor
		<where>
			<if test="searchWord != null">
				first_name LIKE CONCAT('%', #{searchWord}, '%') 
				OR last_name LIKE CONCAT('%', #{searchWord}, '%')
			</if>
		</where>
		ORDER BY first_name ASC
		LIMIT #{beginRow}, #{rowPerPage}
	</select>
	
	<!-- 배우 추가 -->
	<insert id="insertActor" parameterType="com.example.sakila.vo.Actor">
		<selectKey resultType="Integer" keyProperty="actorId" order="AFTER">
			     select LAST_INSERT_ID()
		</selectKey> <!-- 인서트 실행 후 셀렉트 키 실행 -->
		INSERT INTO actor(
			first_name, last_name
		) VALUES (
			#{firstName}, #{lastName}
		)		
	</insert>
	
</mapper>