<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.sakila.mapper.CustomerMapper">
	
	<!-- on/customerList : 마지막 페이지 -->
	<select id="selectTotalCustomer">
		SELECT count(*)
		FROM customer c INNER JOIN address a
		ON c.address_id = a.address_id
	</select>
	
	<!-- /on/addRental -->
	<!-- 고객 이름으로 검색하여 고객 목록을 반환하는 쿼리 -->
	<select id="selectCustomerListByName"
			parameterType="String"
			resultType="com.example.sakila.vo.Customer">
		SELECT 
			customer_id customerId
			, first_name firstName
			, last_name lastName
			, email email
		FROM customer
		WHERE ACTIVE = 1 AND 
		LOWER(CONCAT(first_name, last_name)) LIKE CONCAT('%',LOWER(#{searchName}),'%')
	</select>
	
	<!-- 고객 목록을 페이징하여 반환하는 쿼리 -->
	<select id="selectCustomerList" 
			parameterType="Map"
			resultType="com.example.sakila.vo.Customer">
		SELECT
			customer_id customerId
			, store_id storeId
			, first_name firstName
			, last_name lastName
			, address_id addressId
			, email
			, create_date createDate
			, last_update lastUpdate
		FROM customer
		ORDER BY customer_id DESC
		LIMIT #{beginRow}, #{rowPerPage}
	</select>
	
	<!-- 새로운 고객을 추가하는 쿼리 -->
	<insert id="insertCustomer"
			parameterType="com.example.sakila.vo.Customer">
		INSERT INTO customer (
			store_id, first_name, last_name, email, address_id
		) VALUES (
			#{storeId}, #{firstName}, #{lastName}, #{email}, #{addressId}
		)
	</insert>
</mapper>